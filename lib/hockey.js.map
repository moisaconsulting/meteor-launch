{"version":3,"sources":["../src/hockey.js"],"names":["uploadIOS","Promise","resolve","util","hasPlatform","console","log","stdio","env","uploadAndroid","getCommand","path","ANDROID_HOCKEY_ID","isCrosswalk","android","findCrosswalkApks","commands","signedApks","crosswalkArmv7","crosswalkX86","regular","map","command"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;;;AAEA,IAAMA,YAAY,SAAZA,SAAY;AAAA,SAChB,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AACvB,QAAI,CAACC,eAAKC,WAAL,CAAiB,KAAjB,CAAL,EAA8B;AAC5BC,cAAQC,GAAR,CAAY,kCAAZ;AACA,aAAOJ,QAAQ,SAAR,CAAP;AACD;;AAEDG,YAAQC,GAAR,CAAY,4BAAZ;;AAEA,iCAAS,qBAAT,EAAgC;AAC9BC,aAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADuB;AAE9BC;AAF8B,KAAhC;;AAKA,WAAON,QAAQ,UAAR,CAAP;AACD,GAdD,CADgB;AAAA,CAAlB;;AAkBA,IAAMO,gBAAgB,SAAhBA,aAAgB;AAAA,SACpB,IAAIR,OAAJ,CAAY,UAACC,OAAD,EAAa;AACvB,QAAI,CAACC,eAAKC,WAAL,CAAiB,SAAjB,CAAL,EAAkC;AAChCC,cAAQC,GAAR,CAAY,sCAAZ;AACA,aAAOJ,QAAQ,SAAR,CAAP;AACD;;AAED,QAAMQ,aAAa,SAAbA,UAAa;AAAA,+FAIFC,IAJE,oHAM2BH,IAAII,iBAN/B;AAAA,KAAnB;;AAUAP,YAAQC,GAAR,CAAY,gCAAZ;;AAEA,QAAMO,cAAcC,kBAAQC,iBAAR,EAApB;;AAEA,QAAMC,WAAWH,cACjB,CACEH,WAAWI,kBAAQG,UAAR,CAAmBC,cAA9B,CADF,EAEER,WAAWI,kBAAQG,UAAR,CAAmBE,YAA9B,CAFF,CADiB,GAKf,CAACT,WAAWI,kBAAQG,UAAR,CAAmBG,OAA9B,CAAD,CALF;;AAQAJ,aAASK,GAAT,CAAa;AAAA,aACX,6BAASC,OAAT,EAAkB;AAChBf,eAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADS;AAEhBC;AAFgB,OAAlB,CADW;AAAA,KAAb;;AAOA,WAAON,QAAQ,UAAR,CAAP;AACD,GApCD,CADoB;AAAA,CAAtB;;kBAwCe;AACbF,sBADa;AAEbS;AAFa,C","file":"hockey.js","sourcesContent":["import { execSync } from \"child_process\";\nimport android from \"./android\";\nimport util from \"./util\";\n\nconst uploadIOS = env => (\n  new Promise((resolve) => {\n    if (!util.hasPlatform(\"ios\")) {\n      console.log(\"Skipping iOS upload to Hockey...\");\n      return resolve(\"skipped\");\n    }\n\n    console.log(\"Uploading iOS to Hockey...\");\n\n    execSync(\"fastlane ios hockey\", {\n      stdio: [0, 1, 2],\n      env,\n    });\n\n    return resolve(\"uploaded\");\n  })\n);\n\nconst uploadAndroid = env => (\n  new Promise((resolve) => {\n    if (!util.hasPlatform(\"android\")) {\n      console.log(\"Skipping Android upload to Hockey...\");\n      return resolve(\"skipped\");\n    }\n\n    const getCommand = path => (\n      `\n        curl -F \"status=2\" \\\n          -F \"notify=0\" \\\n          -F \"ipa=@${path}\" \\\n          -H \"X-HockeyAppToken: $ANDROID_HOCKEY_TOKEN\" \\\n          https://rink.hockeyapp.net/api/2/apps/${env.ANDROID_HOCKEY_ID}/app_versions/upload\n      `\n    );\n\n    console.log(\"Uploading Android to Hockey...\");\n\n    const isCrosswalk = android.findCrosswalkApks();\n\n    const commands = isCrosswalk ?\n    [\n      getCommand(android.signedApks.crosswalkArmv7),\n      getCommand(android.signedApks.crosswalkX86),\n    ] :\n      [getCommand(android.signedApks.regular)]\n    ;\n\n    commands.map(command => (\n      execSync(command, {\n        stdio: [0, 1, 2],\n        env,\n      })\n    ));\n\n    return resolve(\"uploaded\");\n  })\n);\n\nexport default {\n  uploadIOS,\n  uploadAndroid,\n};\n"]}