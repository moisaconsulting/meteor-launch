{"version":3,"sources":["../../src/__test/iTunes.js"],"names":["describe","exportedFunctions","map","it","exportedFunction","assert","isOk","iTunes","done","process","env","PATH","cwd","uploadTestFlight","then","result","equal","uploadAppStore"],"mappings":";;AAGA;;AAEA;;;;;;AALA;;AAEA;AAKAA,SAAS,QAAT,EAAmB,YAAM;AACvBA,WAAS,oBAAT,EAA+B,YAAM;AACnC,QAAMC,oBAAoB,CACxB,kBADwB,EAExB,gBAFwB,CAA1B;AAIAA,sBAAkBC,GAAlB,CAAsB;AAAA,aACpBC,oBAAkBC,gBAAlB,EAAsC,YAAM;AAC1CC,qBAAOC,IAAP,CAAYC,iBAAOH,gBAAP,CAAZ;AACD,OAFD,CADoB;AAAA,KAAtB;AAKD,GAVD;AAWAJ,WAAS,kBAAT,EAA6B,YAAM;AACjCG,OAAG,sCAAH,EAA2C,UAACK,IAAD,EAAU;AACnDC,cAAQC,GAAR,CAAYC,IAAZ,GAAsBF,QAAQG,GAAR,EAAtB,kCAAgEH,QAAQC,GAAR,CAAYC,IAA5E;AACAJ,uBAAOM,gBAAP,GACGC,IADH,CACQ,UAACC,MAAD,EAAY;AAChBV,qBAAOW,KAAP,CAAaD,MAAb,EAAqB,SAArB;AACAP;AACD,OAJH;AAKD,KAPD;AAQAL,OAAG,sBAAH,EAA2B,UAACK,IAAD,EAAU;AACnCC,cAAQC,GAAR,CAAYC,IAAZ,GAAsBF,QAAQG,GAAR,EAAtB,0BAAwDH,QAAQC,GAAR,CAAYC,IAApE;AACAJ,uBAAOM,gBAAP,GACGC,IADH,CACQ,UAACC,MAAD,EAAY;AAChBV,qBAAOW,KAAP,CAAaD,MAAb,EAAqB,UAArB;AACAP;AACD,OAJH;AAKD,KAPD;AAQD,GAjBD;AAkBAR,WAAS,gBAAT,EAA2B,YAAM;AAC/BG,OAAG,sCAAH,EAA2C,UAACK,IAAD,EAAU;AACnDC,cAAQC,GAAR,CAAYC,IAAZ,GAAsBF,QAAQG,GAAR,EAAtB,kCAAgEH,QAAQC,GAAR,CAAYC,IAA5E;AACAJ,uBAAOU,cAAP,GACGH,IADH,CACQ,UAACC,MAAD,EAAY;AAChBV,qBAAOW,KAAP,CAAaD,MAAb,EAAqB,SAArB;AACAP;AACD,OAJH;AAKD,KAPD;AAQAL,OAAG,sBAAH,EAA2B,UAACK,IAAD,EAAU;AACnCC,cAAQC,GAAR,CAAYC,IAAZ,GAAsBF,QAAQG,GAAR,EAAtB,0BAAwDH,QAAQC,GAAR,CAAYC,IAApE;AACAJ,uBAAOU,cAAP,GACGH,IADH,CACQ,UAACC,MAAD,EAAY;AAChBV,qBAAOW,KAAP,CAAaD,MAAb,EAAqB,UAArB;AACAP;AACD,OAJH;AAKD,KAPD;AAQD,GAjBD;AAkBD,CAhDD","file":"iTunes.js","sourcesContent":["/* global describe it */\n\n// eslint-disable-next-line\nimport { assert } from \"chai\";\n\nimport iTunes from \"../iTunes\";\n\ndescribe(\"iTunes\", () => {\n  describe(\"exported functions\", () => {\n    const exportedFunctions = [\n      \"uploadTestFlight\",\n      \"uploadAppStore\",\n    ];\n    exportedFunctions.map(exportedFunction => (\n      it(`should have ${exportedFunction}`, () => {\n        assert.isOk(iTunes[exportedFunction]);\n      })\n    ));\n  });\n  describe(\"uploadTestFlight\", () => {\n    it(\"should do nothing if no ios platform\", (done) => {\n      process.env.PATH = `${process.cwd()}/src/__test/mocks/android:${process.env.PATH}`;\n      iTunes.uploadTestFlight()\n        .then((result) => {\n          assert.equal(result, \"skipped\");\n          done();\n        });\n    });\n    it(\"should call fastlane\", (done) => {\n      process.env.PATH = `${process.cwd()}/src/__test/mocks:${process.env.PATH}`;\n      iTunes.uploadTestFlight()\n        .then((result) => {\n          assert.equal(result, \"uploaded\");\n          done();\n        });\n    });\n  });\n  describe(\"uploadAppStore\", () => {\n    it(\"should do nothing if no ios platform\", (done) => {\n      process.env.PATH = `${process.cwd()}/src/__test/mocks/android:${process.env.PATH}`;\n      iTunes.uploadAppStore()\n        .then((result) => {\n          assert.equal(result, \"skipped\");\n          done();\n        });\n    });\n    it(\"should call fastlane\", (done) => {\n      process.env.PATH = `${process.cwd()}/src/__test/mocks:${process.env.PATH}`;\n      iTunes.uploadAppStore()\n        .then((result) => {\n          assert.equal(result, \"uploaded\");\n          done();\n        });\n    });\n  });\n});\n"]}