{"version":3,"sources":["../../src/__test/android.js"],"names":["describe","exportedFunctions","map","it","exportedFunction","assert","isOk","android","done","process","env","PATH","cwd","prepareApk","then","result","equal","ANDROID_ZIPALIGN","crosswalkOutputPath","after","rimraf","sync"],"mappings":";;AAGA;;AACA;;AACA;;AACA;;;;AAEA;;;;;;AAEAA,SAAS,SAAT,EAAoB,YAAM;AACxBA,WAAS,oBAAT,EAA+B,YAAM;AACnC,QAAMC,oBAAoB,CACxB,YADwB,EAExB,mBAFwB,EAGxB,YAHwB,CAA1B;AAKAA,sBAAkBC,GAAlB,CAAsB;AAAA,aACpBC,oBAAkBC,gBAAlB,EAAsC,YAAM;AAC1CC,qBAAOC,IAAP,CAAYC,kBAAQH,gBAAR,CAAZ;AACD,OAFD,CADoB;AAAA,KAAtB;AAKD,GAXD;AAYAJ,WAAS,YAAT,EAAuB,YAAM;AAC3BG,OAAG,0CAAH,EAA+C,UAACK,IAAD,EAAU;AACvDC,cAAQC,GAAR,CAAYC,IAAZ,GAAsBF,QAAQG,GAAR,EAAtB,8BAA4DH,QAAQC,GAAR,CAAYC,IAAxE;AACAJ,wBAAQM,UAAR,CAAmBJ,QAAQC,GAA3B,EACGI,IADH,CACQ,UAACC,MAAD,EAAY;AAChBV,qBAAOW,KAAP,CAAaD,MAAb,EAAqB,SAArB;AACAP;AACD,OAJH;AAMD,KARD;AASAL,OAAG,iCAAH,EAAsC,UAACK,IAAD,EAAU;AAC9CC,cAAQC,GAAR,CAAYC,IAAZ,GAAsBF,QAAQG,GAAR,EAAtB,0BAAwDH,QAAQC,GAAR,CAAYC,IAApE;AACAF,cAAQC,GAAR,CAAYO,gBAAZ,GAAkCR,QAAQG,GAAR,EAAlC;AACAL,wBAAQM,UAAR,CAAmBJ,QAAQC,GAA3B,EACGI,IADH,CACQ,UAACC,MAAD,EAAY;AAChBV,qBAAOW,KAAP,CAAaD,MAAb,EAAqB,UAArB;AACAP;AACD,OAJH;AAMD,KATD;AAUAL,OAAG,gCAAH,EAAqC,UAACK,IAAD,EAAU;AAC7C,UAAMU,sBAAsB,mBAC1BT,QAAQG,GAAR,EAD0B,EAE1B,WAF0B,EAG1B,SAH0B,EAI1B,SAJ0B,EAK1B,OAL0B,EAM1B,SAN0B,EAO1B,KAP0B,CAA5B;AASA,iDAAqBM,mBAArB;AACA,8CAAkBA,mBAAlB;AACA,8CAAkBA,mBAAlB;;AAEAT,cAAQC,GAAR,CAAYC,IAAZ,GAAsBF,QAAQG,GAAR,EAAtB,0BAAwDH,QAAQC,GAAR,CAAYC,IAApE;AACAF,cAAQC,GAAR,CAAYO,gBAAZ,GAAkCR,QAAQG,GAAR,EAAlC;AACAL,wBAAQM,UAAR,CAAmBJ,QAAQC,GAA3B,EACGI,IADH,CACQ,UAACC,MAAD,EAAY;AAChBV,qBAAOW,KAAP,CAAaD,MAAb,EAAqB,UAArB;AACAP;AACD,OAJH;AAMD,KAtBD;AAuBAW,UAAM,YAAM;AACVC,uBAAOC,IAAP,CAAeZ,QAAQG,GAAR,EAAf;AACD,KAFD;AAGD,GA9CD;AA+CD,CA5DD,E,CAVA;;AAEA","file":"android.js","sourcesContent":["/* global describe it before after */\n\n// eslint-disable-next-line\nimport { assert } from \"chai\";\nimport { execSync } from \"child_process\";\nimport { resolve } from \"path\";\nimport rimraf from \"rimraf\";\n\nimport android from \"../android\";\n\ndescribe(\"android\", () => {\n  describe(\"exported functions\", () => {\n    const exportedFunctions = [\n      \"prepareApk\",\n      \"findCrosswalkApks\",\n      \"signedApks\",\n    ];\n    exportedFunctions.map(exportedFunction => (\n      it(`should have ${exportedFunction}`, () => {\n        assert.isOk(android[exportedFunction]);\n      })\n    ));\n  });\n  describe(\"prepareApk\", () => {\n    it(\"should do nothing if no android platform\", (done) => {\n      process.env.PATH = `${process.cwd()}/src/__test/mocks/ios:${process.env.PATH}`;\n      android.prepareApk(process.env)\n        .then((result) => {\n          assert.equal(result, \"skipped\");\n          done();\n        })\n      ;\n    });\n    it(\"should call jarsigner and align\", (done) => {\n      process.env.PATH = `${process.cwd()}/src/__test/mocks:${process.env.PATH}`;\n      process.env.ANDROID_ZIPALIGN = `${process.cwd()}/src/__test/mocks/align`;\n      android.prepareApk(process.env)\n        .then((result) => {\n          assert.equal(result, \"prepared\");\n          done();\n        })\n      ;\n    });\n    it(\"should handle crosswalk builds\", (done) => {\n      const crosswalkOutputPath = resolve(\n        process.cwd(),\n        \"undefined\",\n        \"android\",\n        \"project\",\n        \"build\",\n        \"outputs\",\n        \"apk\",\n      );\n      execSync(`mkdir -p ${crosswalkOutputPath}`);\n      execSync(`touch ${crosswalkOutputPath}/android-armv7-release-unsigned.apk`);\n      execSync(`touch ${crosswalkOutputPath}/android-x86-release-unsigned.apk`);\n\n      process.env.PATH = `${process.cwd()}/src/__test/mocks:${process.env.PATH}`;\n      process.env.ANDROID_ZIPALIGN = `${process.cwd()}/src/__test/mocks/align`;\n      android.prepareApk(process.env)\n        .then((result) => {\n          assert.equal(result, \"prepared\");\n          done();\n        })\n      ;\n    });\n    after(() => {\n      rimraf.sync(`${process.cwd()}/undefined`);\n    });\n  });\n});\n"]}